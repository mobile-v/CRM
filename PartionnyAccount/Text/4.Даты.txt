 === BackEnd ===

//С 2016-05-01 00:00:00 по 2016-05-01 23:59:59

DateS = Convert.ToDateTime(Convert.ToDateTime(Request.Params["DateS"]).ToString("yyyy-MM-dd 00:00:00"));
DatePo = Convert.ToDateTime(Convert.ToDateTime(Request.Params["DatePo"]).ToString("yyyy-MM-dd 23:59:59"));


//В Документах

_params.DateS = Convert.ToDateTime(Convert.ToDateTime(paramList.FirstOrDefault(kv => string.Compare(kv.Key, "DateS", true) == 0).Value).ToString("yyyy-MM-dd 00:00:00"));
if (_params.DateS < Convert.ToDateTime("01.01.1800")) _params.DateS = Convert.ToDateTime(sysSetting.JurDateS.ToString("yyyy-MM-dd 00:00:00"));

_params.DatePo = Convert.ToDateTime(Convert.ToDateTime(paramList.FirstOrDefault(kv => string.Compare(kv.Key, "DatePo", true) == 0).Value).ToString("yyyy-MM-dd 23:59:59"));
if (_params.DatePo < Convert.ToDateTime("01.01.1800")) _params.DatePo = Convert.ToDateTime(sysSetting.JurDatePo.ToString("yyyy-MM-dd 23:59:59"));


 === FronEnd ExtJS ===

 Ext.Date.patterns={
    ISO8601Long: "d-m-Y H:i:sP",
    ISO8601Short:"d-m-Y",
    ShortDate: "j/n/y",
    FullDateTime: "l, F d, Y g:i:s A",
    LongTime: "g:i:s A",
    SortableDateTime: "d-m-Y\ H:i:s",
    UniversalSortableDateTime: "Y-m-d H:i:sO", 
    CustomFormat: "H:i d-m"
};

Ext.Date.format(date, Ext.Date.patterns.ISO8601Long)

